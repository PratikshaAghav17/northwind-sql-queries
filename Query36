36. Classify customers based on their total order amounts such that total order amounts > 5000 should be classified as ‘High Value’, if > 1000 then as ‘Medium Value’ and otherwise as ‘Low Value’

SELECT Customers.Customer_ID, Customers.Company_Name, 
    SUM(Order_Details.Quantity * Order_Details.Unit_Price) AS TotalOrderAmount,
    CASE 
        WHEN SUM(Order_Details.Quantity * Order_Details.Unit_Price) > 5000 THEN 'High Value'
        WHEN SUM(Order_Details.Quantity * Order_Details.Unit_Price) > 1000 THEN 'Medium Value'
        ELSE 'Low Value'
    END AS CustomerClass
FROM Customers
JOIN Orders ON Customers.Customer_ID = Orders.Customer_ID
JOIN Order_Details ON Orders.Order_ID = Order_Details.Order_ID
GROUP BY Customers.Customer_ID, Customers.Company_Name
ORDER BY TotalOrderAmount DESC;


This query involves joining the Customers, Orders, and OrderDetails tables. It calculates the total order amount for each customer by multiplying the Quantity column with the UnitPrice column from the OrderDetails table.
The CASE statement is used to classify customers based on their total order amounts into different categories: 'High Value', 'Medium Value', and 'Low Value'. It compares the total order amount with specific thresholds and assigns the corresponding category based on the conditions provided.
The results are grouped by CustomerID and CompanyName, and the total order amount and value category are calculated for each customer.
The results are then sorted in descending order based on the total order amount using the ORDER BY clause.
